id: fits_sink_fits_sink
label: fits_sink
category: '[fits_sink]'

templates:
  imports: from gnuradio import fits_sink
  make: fits_sink.fits_sink( ${vec_length}, ${samp_rate}, ${freq}, ${prefix}, ${n_samples}, ${mode}, ${fit}, ${tz}, ${lat}, ${lon}, ${heigth}, ${Alt}, ${Az})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: vec_length
  label: vec_length
  dtype: int
- id: samp_rate
  label: samp_rate
  dtype: float
- id: freq
  label: freq
  dtype: float
- id: prefix
  label: prefix
  dtype: string
- id: n_samples
  label: n_samples
  dtype: int
- id: mode
  label: mode
  dtype: string
- id: fit
  label: fit
  dtype: bool
- id: tz
  label: tz
  dtype: string
  default: "America/Recife"
- id: lat
  label: lat
  dtype: float
  default: "-7.2117"
- id: lon
  label: lon
  dtype: float
  default: "-35.9081"
- id: heigth
  label: heigth
  dtype: float
  default: "553"
- id: Alt
  label: Alt
  dtype: float
  default: "84"
- id: Az
  label: Az
  dtype: float
  default: "0.0"

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: float
  vlen: ${vec_length}


#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
